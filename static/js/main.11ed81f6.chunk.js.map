{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItemFromCart","filter","cartActions","actions","CartItem","dispatch","useDispatch","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","UISlice","showCart","notification","toggle","showNotification","status","message","UIActions","CartButton","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","UI","useEffect","a","fetchData","fetch","response","ok","Error","json","data","console","log","sendRequest","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11ed81f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__2Sute\",\"details\":\"CartItem_details__2wMwg\",\"quantity\":\"CartItem_quantity__3rgH9\",\"price\":\"CartItem_price__205bB\",\"itemprice\":\"CartItem_itemprice__T1g_u\",\"actions\":\"CartItem_actions__2s1lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__2K9dz\",\"price\":\"ProductItem_price__2aFta\",\"actions\":\"ProductItem_actions__1v3_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__39WwB\",\"error\":\"Notification_error__3ZD5Y\",\"success\":\"Notification_success__1ffSl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3l8YB\",\"badge\":\"CartButton_badge__oKcvl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1xSTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__2FqQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__2xSc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__2WUgP\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false,\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          title: newItem.title,\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n        existingItem.totalPrice += newItem.price;\n      }\n      state.changed = true;\n      state.totalQuantity += 1;\n    },\n\n    removeItemFromCart(state, action) {\n      const { id } = action.payload;\n\n      const existingItem = state.items.find((item) => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n      state.changed = true;\n      state.totalQuantity--;\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\nimport classes from \"./CartItem.module.css\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const { id, title, quantity, totalPrice, price } = props.item;\n\n  const addItemHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart({ id }));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${totalPrice.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\n// let isInitial = true;\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => (\n          <CartItem key={item.id} item={item} />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst UIInitialState = {\n  showCart: false,\n  notification: null,\n};\n\nconst UISlice = createSlice({\n  name: \"ui\",\n  initialState: UIInitialState,\n  reducers: {\n    toggle(state) {\n      state.showCart = !state.showCart;\n    },\n\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const UIActions = UISlice.actions;\n\nexport default UISlice;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { UIActions } from \"../../store/ui-slice\";\nimport classes from \"./CartButton.module.css\";\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n\n  const toggleCartHandler = () => {\n    dispatch(UIActions.toggle());\n  };\n\n  const totalQuantity = useSelector((state) => state.cart.totalQuantity);\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nconst ProductItem = (props) => {\n  const { id, title, price, description } = props;\n\n  const dispatch = useDispatch();\n\n  const addToCartHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: \"p1\",\n    price: 6,\n    title: \"My First Book\",\n    description: \"This is my first book.\",\n  },\n  {\n    id: \"p2\",\n    price: 12,\n    title: \"My Second Book\",\n    description: \"This is my second book.\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product) => (\n          <ProductItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\n\nconst Notification = (props) => {\n  let specialClasses = \"\";\n\n  if (props.status === \"error\") {\n    specialClasses = classes.error;\n  }\n  if (props.status === \"success\") {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;\n","import { useEffect, Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { fetchCartData, sendCartData } from \"./store/cart-actions\";\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.UI.showCart);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.UI.notification);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { cartActions } from \"./cart-slice\";\nimport { UIActions } from \"./ui-slice\";\n\nconst sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      UIActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://foodie-6d394-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        UIActions.showNotification({\n          status: \"success\",\n          title: \"Sucess!\",\n          message: \"Sending cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        UIActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\nconst fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://foodie-6d394-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Fetch cart data failed\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const data = await fetchData();\n      console.log(data);\n      dispatch(\n        cartActions.replaceCart({\n          items: data.items || [],\n          totalQuantity: data.totalQuantity || 0,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        UIActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Fetch cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\nexport { sendCartData, fetchCartData };\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport cartSlice from \"./cart-slice\";\nimport UISlice from \"./ui-slice\";\n\nconst store = configureStore({\n  reducer: {\n    UI: UISlice.reducer,\n    cart: cartSlice.reducer,\n  },\n});\n\nexport default store;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}